\ ========== Copyright Header Begin ==========================================
\ 
\ Hypervisor Software File: k64t32.fth
\ 
\ Copyright (c) 2006 Sun Microsystems, Inc. All Rights Reserved.
\ 
\  - Do no alter or remove copyright notices
\ 
\  - Redistribution and use of this software in source and binary forms, with 
\    or without modification, are permitted provided that the following 
\    conditions are met: 
\ 
\  - Redistribution of source code must retain the above copyright notice, 
\    this list of conditions and the following disclaimer.
\ 
\  - Redistribution in binary form must reproduce the above copyright notice,
\    this list of conditions and the following disclaimer in the
\    documentation and/or other materials provided with the distribution. 
\ 
\    Neither the name of Sun Microsystems, Inc. or the names of contributors 
\ may be used to endorse or promote products derived from this software 
\ without specific prior written permission. 
\ 
\     This software is provided "AS IS," without a warranty of any kind. 
\ ALL EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND WARRANTIES, 
\ INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A 
\ PARTICULAR PURPOSE OR NON-INFRINGEMENT, ARE HEREBY EXCLUDED. SUN 
\ MICROSYSTEMS, INC. ("SUN") AND ITS LICENSORS SHALL NOT BE LIABLE FOR 
\ ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR 
\ DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES. IN NO EVENT WILL SUN 
\ OR ITS LICENSORS BE LIABLE FOR ANY LOST REVENUE, PROFIT OR DATA, OR 
\ FOR DIRECT, INDIRECT, SPECIAL, CONSEQUENTIAL, INCIDENTAL OR PUNITIVE 
\ DAMAGES, HOWEVER CAUSED AND REGARDLESS OF THE THEORY OF LIABILITY, 
\ ARISING OUT OF THE USE OF OR INABILITY TO USE THIS SOFTWARE, EVEN IF 
\ SUN HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
\ 
\ You acknowledge that this software is not designed, licensed or
\ intended for use in the design, construction, operation or maintenance of
\ any nuclear facility. 
\ 
\ ========== Copyright Header End ============================================
h# 0080f0 ( type 2 ) headerless: (lit) 
h# 008118 ( type 2 ) headerless: (wlit) 
h# 008134 ( type 2 ) headerless: (llit) 
h# 008154 ( type 2 ) headerless: branch 
h# 00816c ( type 2 ) headerless: ?branch 
h# 00818c ( type 2 ) headerless: (loop) 
h# 0081b0 ( type 2 ) headerless: (+loop) 
h# 0081dc ( type 2 ) headerless: (do) 
h# 008224 ( type 2 ) headerless: (?do) 
h# 00825c ( type 1 ) header: i 
h# 008284 ( type 1 ) header: j 
h# 0082a4 ( type 2 ) headerless: (leave) 
h# 0082c4 ( type 2 ) headerless: (?leave) 
h# 0082ec ( type 1 ) header: unloop 
h# 0082fc ( type 2 ) headerless: (of) 
h# 008340 ( type 2 ) headerless: (endof) 
h# 008358 ( type 2 ) headerless: (endcase) 
h# 008378 ( type 1 ) header: execute 
h# 0083a4 ( type 1 ) header: digit 
h# 008404 ( type 1 ) header: cmove 
h# 008454 ( type 1 ) header: cmove> 
h# 008498 ( type 1 ) header: and 
h# 0084b8 ( type 1 ) header: or 
h# 0084d8 ( type 1 ) header: xor 
h# 0084f8 ( type 1 ) header: << 
h# 008518 ( type 1 ) header: >> 
h# 008538 ( type 1 ) header: >>a 
h# 00855c ( type 1 ) header: lshift 
h# 008580 ( type 1 ) header: rshift 
h# 0085a0 ( type 1 ) header: + 
h# 0085c0 ( type 1 ) header: - 
h# 0085e4 ( type 1 ) header: invert 
h# 008600 ( type 1 ) header: negate 
h# 008610 ( type 2 ) headerless: first-code-word 
h# 00862c ( type 1 ) header: abs 
h# 008654 ( type 1 ) header: min 
h# 008680 ( type 1 ) header: max 
h# 0086b0 ( type 1 ) header: umin 
h# 0086e0 ( type 1 ) header: umax 
h# 00870c ( type 1 ) header: up@ 
h# 00872c ( type 1 ) header: sp@ 
h# 00874c ( type 1 ) header: rp@ 
h# 00876c ( type 1 ) header: up! 
h# 00878c ( type 1 ) header: sp! 
h# 0087ac ( type 1 ) header: rp! 
h# 0087cc ( type 1 ) header: >r 
h# 0087f0 ( type 1 ) header: r> 
h# 008814 ( type 1 ) header: r@ 
h# 008838 ( type 1 ) header: >user 
h# 008854 ( type 1 ) header: 2>r 
h# 008880 ( type 1 ) header: 2r> 
h# 0088ac ( type 1 ) header: 2r@ 
h# 0088d4 ( type 1 ) header: >ip 
h# 0088f8 ( type 1 ) header: ip> 
h# 00891c ( type 1 ) header: ip@ 
h# 008944 ( type 1 ) header: ip>token 
h# 008964 ( type 1 ) header: exit 
h# 008984 ( type 1 ) header: unnest 
h# 0089a4 ( type 1 ) header: tuck 
h# 0089c8 ( type 1 ) header: nip 
h# 0089e4 ( type 1 ) header: flip 
h# 008a0c ( type 1 ) header: 0= 
h# 008a30 ( type 1 ) header: 0<> 
h# 008a54 ( type 1 ) header: 0< 
h# 008a78 ( type 1 ) header: 0<= 
h# 008a9c ( type 1 ) header: 0> 
h# 008ac0 ( type 1 ) header: 0>= 
h# 008ae4 ( type 1 ) header: < 
h# 008b10 ( type 1 ) header: > 
h# 008b3c ( type 1 ) header: = 
h# 008b68 ( type 1 ) header: <> 
h# 008b94 ( type 1 ) header: u> 
h# 008bc0 ( type 1 ) header: u<= 
h# 008bec ( type 1 ) header: u< 
h# 008c18 ( type 1 ) header: u>= 
h# 008c44 ( type 1 ) header: >= 
h# 008c70 ( type 1 ) header: <= 
h# 008ca0 ( type 1 ) header: drop 
h# 008cc0 ( type 1 ) header: ?dup 
h# 008ce8 ( type 1 ) header: dup 
h# 008d08 ( type 1 ) header: over 
h# 008d2c ( type 1 ) header: swap 
h# 008d4c ( type 1 ) header: rot 
h# 008d78 ( type 1 ) header: -rot 
h# 008da4 ( type 1 ) header: 2drop 
h# 008dc8 ( type 1 ) header: 2dup 
h# 008df0 ( type 1 ) header: 2over 
h# 008e1c ( type 1 ) header: 2swap 
h# 008e50 ( type 1 ) header: 3drop 
h# 008e70 ( type 1 ) header: 3dup 
h# 008ea0 ( type 1 ) header: pick 
h# 008ebc ( type 1 ) header: 1+ 
h# 008ed4 ( type 1 ) header: 2+ 
h# 008eec ( type 1 ) header: 1- 
h# 008f04 ( type 1 ) header: 2- 
h# 008f1c ( type 1 ) header: 2/ 
h# 008f34 ( type 1 ) header: u2/ 
h# 008f4c ( type 1 ) header: 2* 
h# 008f64 ( type 1 ) header: 4* 
h# 008f7c ( type 1 ) header: 8* 
h# 008f94 ( type 1 ) header: on 
h# 008fbc ( type 1 ) header: off 
h# 008fe0 ( type 1 ) header: +! 
h# 009020 ( type 1 ) header: @ 
h# 009044 ( type 1 ) header: d@ 
h# 009068 ( type 1 ) header: x@ 
h# 009080 ( type 1 ) header: l@ 
h# 009098 ( type 1 ) header: w@ 
h# 0090b0 ( type 1 ) header: <w@ 
h# 0090d0 ( type 1 ) header: <l@ 
h# 0090ec ( type 1 ) header: c@ 
h# 00910c ( type 1 ) header: unaligned-@ 
h# 00917c ( type 1 ) header: be-l@ 
h# 0091c4 ( type 1 ) header: unaligned-l@ 
h# 00920c ( type 1 ) header: unaligned-w@ 
h# 009230 ( type 1 ) header: ! 
h# 009254 ( type 2 ) headerless: (is-user) 
h# 009278 ( type 2 ) headerless: (is-defer) 
h# 0092b4 ( type 1 ) header: d! 
h# 0092dc ( type 1 ) header: x! 
h# 009300 ( type 1 ) header: l! 
h# 009324 ( type 1 ) header: w! 
h# 009348 ( type 1 ) header: c! 
h# 009378 ( type 1 ) header: unaligned-d! 
h# 00941c ( type 1 ) header: unaligned-! 
h# 00947c ( type 1 ) header: be-l! 
h# 0094bc ( type 1 ) header: be-l, 
h# 0094ec ( type 1 ) header: unaligned-l! 
h# 009534 ( type 1 ) header: unaligned-w! 
h# 009560 ( type 1 ) header: 2@ 
h# 0095cc ( type 1 ) header: 2! 
h# 00962c ( type 1 ) header: fill 
h# 0096c0 ( type 1 ) header: noop 
h# 0096d8 ( type 1 ) header: n->l 
h# 0096f0 ( type 1 ) header: s>d 
h# 009710 ( type 1 ) header: wbsplit 
h# 00973c ( type 1 ) header: bwjoin 
h# 00976c ( type 1 ) header: lwsplit 
h# 00979c ( type 1 ) header: wljoin 
h# 0097cc ( type 1 ) header: xlsplit 
h# 0097f4 ( type 1 ) header: lxjoin 
h# 00981c ( type 1 ) header: /c 
h# 009834 ( type 1 ) header: /w 
h# 00984c ( type 1 ) header: /l 
h# 009864 ( type 1 ) header: /x 
h# 00987c ( type 1 ) header: /n 
h# 009894 ( type 1 ) header: ca+ 
h# 0098b4 ( type 1 ) header: wa+ 
h# 0098d8 ( type 1 ) header: la+ 
h# 0098fc ( type 1 ) header: xa+ 
h# 009920 ( type 1 ) header: na+ 
h# 009944 ( type 1 ) header: ta+ 
h# 00996c ( type 1 ) header: ca1+ 
h# 009988 ( type 1 ) header: char+ 
h# 0099a4 ( type 1 ) header: wa1+ 
h# 0099c0 ( type 1 ) header: la1+ 
h# 0099dc ( type 1 ) header: xa1+ 
h# 0099f8 ( type 1 ) header: na1+ 
h# 009a14 ( type 1 ) header: cell+ 
h# 009a30 ( type 1 ) header: ta1+ 
h# 009a48 ( type 1 ) header: /c* 
h# 009a60 ( type 1 ) header: chars 
h# 009a74 ( type 1 ) header: /w* 
h# 009a8c ( type 1 ) header: /l* 
h# 009aa4 ( type 1 ) header: /x* 
h# 009abc ( type 1 ) header: /n* 
h# 009ad8 ( type 1 ) header: cells 
h# 009af0 ( type 1 ) header: upc 
h# 009b18 ( type 1 ) header: lcc 
h# 009b44 ( type 1 ) header: comp 
h# 009bb8 ( type 1 ) header: caps-comp 
h# 009c58 ( type 1 ) header: pack 
h# 009ca8 ( type 1 ) header: (') 
h# 009cd4 ( type 1 ) header: skipstr 
h# 009d10 ( type 1 ) header: (") 
h# 009d48 ( type 1 ) header: count 
h# 009d74 ( type 1 ) header: between 
h# 009dbc ( type 1 ) header: within 
h# 009e04 ( type 1 ) header: bounds 
h# 009e38 ( type 1 ) header: origin 
h# 009e5c ( type 1 ) header: origin+ 
h# 009e78 ( type 1 ) header: origin- 
h# 009e94 ( type 1 ) header: i-flush 
h# 009ec0 ( type 1 ) header: instruction! 
h# 009ef4 ( type 1 ) header: instruction, 
h# 009f10 ( type 2 ) headerless: dec-sp-instr 
h# 009f20 ( type 2 ) headerless: dec-rp-instr 
h# 009f30 ( type 2 ) headerless: pfa>scr-instr 
h# 009f40 ( type 2 ) headerless: param>scr-instr 
h# 009f50 ( type 2 ) headerless: >offset-30 
h# 009f74 ( type 2 ) headerless: put-call 
h# 009fa0 ( type 2 ) headerless: put-branch 
h# 009fdc ( type 2 ) headerless: set-delay-slot 
h# 009ff8 ( type 2 ) headerless: place-call 
h# 00a028 ( type 2 ) headerless: place-cf 
h# 00a038 ( type 2 ) headerless: code-cf 
h# 00a048 ( type 2 ) headerless: >code 
h# 00a054 ( type 2 ) headerless: code? 
h# 00a090 ( type 1 ) header: next 
h# 00a0dc ( type 1 ) header: word-type 
h# 00a108 ( type 2 ) headerless: create-cf 
h# 00a124 ( type 2 ) headerless: place-does 
h# 00a140 ( type 2 ) headerless: place-;code 
h# 00a14c ( type 2 ) headerless: does-ip? 
h# 00a19c ( type 2 ) headerless: put-cf 
h# 00a1c0 ( type 2 ) headerless: used 
h# 00a1d4 ( type 2 ) headerless: does-clause? 
h# 00a220 ( type 2 ) headerless: does-cf? 
h# 00a274 ( type 1 ) header: colon-cf 
h# 00a298 ( type 2 ) headerless: colon-cf? 
h# 00a2d8 ( type 2 ) headerless: user-cf 
h# 00a2f4 ( type 2 ) headerless: value-cf 
h# 00a310 ( type 2 ) headerless: constant-cf 
h# 00a32c ( type 2 ) headerless: defer-cf 
h# 00a350 ( type 2 ) headerless: defer? 
h# 00a390 ( type 2 ) headerless: 2constant-cf 
h# 00a3ac ( type 2 ) headerless: /branch 
h# 00a3bc ( type 2 ) headerless: branch, 
h# 00a3cc ( type 2 ) headerless: branch! 
h# 00a3dc ( type 2 ) headerless: branch@ 
h# 00a3ec ( type 2 ) headerless: >target 
h# 00a410 ( type 1 ) header: /a 
h# 00a428 ( type 1 ) header: a@ 
h# 00a444 ( type 1 ) header: a! 
h# 00a470 ( type 1 ) header: a, 
h# 00a498 ( type 1 ) header: /token 
h# 00a4b4 ( type 1 ) header: token@ 
h# 00a4d4 ( type 1 ) header: token! 
h# 00a500 ( type 1 ) header: token, 
h# 00a528 ( type 1 ) header: null 
h# 00a550 ( type 1 ) header: !null-link 
h# 00a578 ( type 1 ) header: !null-token 
h# 00a5a0 ( type 1 ) header: non-null? 
h# 00a5d8 ( type 1 ) header: get-token? 
h# 00a600 ( type 1 ) header: another-link? 
h# 00a620 ( type 1 ) header: body> 
h# 00a63c ( type 1 ) header: >body 
h# 00a658 ( type 1 ) header: /user# 
h# 00a678 ( type 1 ) header: round-down 
h# 00a6a0 ( type 1 ) header: round-up 
h# 00a6d0 ( type 1 ) header: (align) 
h# 00a71c ( type 1 ) header: aligned 
h# 00a758 ( type 1 ) header: acf-aligned 
h# 00a780 ( type 1 ) header: acf-align 
h# 00a7ac ( type 1 ) header: /mod 
h# 00a884 ( type 1 ) header: / 
h# 00a8a0 ( type 1 ) header: mod 
h# 00a8b4 ( type 2 ) headerless: clear-relocation-bits 
h# 00a8d0 ( type 1 ) header: u/mod 
h# 00a900 ( type 1 ) header: link 
h# 00a918 ( type 1 ) header: entry 
h# 00a934 ( type 1 ) header: saved-rp 
h# 00a950 ( type 1 ) header: saved-sp 
h# 00a964 ( type 1 ) header: up0 
h# 00a97c ( type 1 ) header: #user 
h# 00a994 ( type 1 ) header: #ualign 
h# 00a9b4 ( type 1 ) header: ualigned 
h# 00a9e0 ( type 1 ) header: (check-user-size) 
h# 00aa34 ( type 1 ) header: user-size 
h# 00aa54 ( type 1 ) header: check-user-size 
h# 00aa6c ( type 1 ) header: ualloc 
h# 00aac0 ( type 1 ) header: nuser 
h# 00aae4 ( type 1 ) header: tuser 
h# 00ab08 ( type 1 ) header: auser 
h# 00ab2c ( type 1 ) header: .sp0 
h# 00ab44 ( type 1 ) header: .rp0 
h# 00ab58 ( type 1 ) header: sp0 
h# 00ab6c ( type 1 ) header: rp0 
h# 00ab78 ( type 2 ) headerless: init 
h# 00ab98 ( type 1 ) header: * 
h# 00abbc ( type 1 ) header: (move) 
h# 00ae38 ( type 1 ) header: move 
h# 00ae50 ( type 1 ) header: perform 
h# 00ae60 ( type 2 ) headerless: hash 
h# 00aea0 ( type 1 ) header: search-thread 
h# 00af5c ( type 1 ) header: ($find-next) 
h# 00afe8 ( type 1 ) header: ?negate 
h# 00b00c ( type 1 ) header: wflip 
h# 00b038 ( type 1 ) header: toggle 
h# 00b068 ( type 1 ) header: log2 
h# 00b09c ( type 1 ) header: bits 
h# 00b0d4 ( type 1 ) header: s->l 
h# 00b0ec ( type 1 ) header: l->n 
h# 00b108 ( type 1 ) header: n->a 
h# 00b120 ( type 1 ) header: l->w 
h# 00b140 ( type 1 ) header: n->w 
h# 00b15c ( type 1 ) header: l>r 
h# 00b180 ( type 1 ) header: lr> 
h# 00b1a4 ( type 1 ) header: lr@ 
h# 00b1bc ( type 2 ) headerless: /t* 
h# 00b1d8 ( type 1 ) header: #talign 
h# 00b1f8 ( type 1 ) header: #linkalign 
h# 00b214 ( type 1 ) header: #align 
h# 00b234 ( type 1 ) header: #acf-align 
h# 00b250 ( type 1 ) header: align 
h# 00b270 ( type 1 ) header: talign 
h# 00b294 ( type 1 ) header: taligned 
h# 00b2b8 ( type 1 ) header: linkalign 
h# 00b2d4 ( type 1 ) header: u* 
h# 00b2f4 ( type 1 ) header: (dlit) 
h# 00b344 ( type 1 ) header: dnegate 
h# 00b36c ( type 1 ) header: dabs 
h# 00b38c ( type 1 ) header: d+ 
h# 00b3c4 ( type 1 ) header: d- 
h# 00b404 ( type 81 ) header: 2literal immediate
h# 00b42c ( type 1 ) header: 2variable 
h# 00b450 ( type 2 ) headerless: ?2off 
h# 00b46c ( type 2 ) headerless: d(pre-compare) 
h# 00b494 ( type 1 ) header: d0= 
h# 00b4b0 ( type 1 ) header: d= 
h# 00b4cc ( type 1 ) header: d<> 
h# 00b4e8 ( type 1 ) header: d0< 
h# 00b504 ( type 1 ) header: du< 
h# 00b520 ( type 1 ) header: d< 
h# 00b580 ( type 1 ) header: u>d 
h# 00b5a0 ( type 1 ) header: d>s 
h# 00b5bc ( type 1 ) header: (d.) 
h# 00b5f0 ( type 1 ) header: (ud.) 
h# 00b610 ( type 1 ) header: d. 
h# 00b630 ( type 1 ) header: ud. 
h# 00b654 ( type 1 ) header: ud.r 
h# 00b684 ( type 1 ) header: d2* 
h# 00b6b8 ( type 1 ) header: d2/ 
h# 00b708 ( type 1 ) header: dmax 
h# 00b730 ( type 1 ) header: dmin 
h# 00b758 ( type 1 ) header: m+ 
h# 00b778 ( type 1 ) header: 2rot 
h# 00b7a8 ( type 1 ) header: bits/half-cell 
h# 00b7c8 ( type 1 ) header: bits/cell 
h# 00b7e8 ( type 1 ) header: scale-up 
h# 00b80c ( type 1 ) header: scale-down 
h# 00b834 ( type 1 ) header: split-halves 
h# 00b870 ( type 1 ) header: um/mod 
h# 00bb10 ( type 1 ) header: sm/rem 
h# 00bc04 ( type 1 ) header: fm/mod 
h# 00bc70 ( type 1 ) header: m* 
h# 00bcb8 ( type 1 ) header: */mod 
h# 00bcdc ( type 1 ) header: */ 
h# 00bcfc ( type 1 ) header: half* 
h# 00bd24 ( type 1 ) header: um* 
h# 00be64 ( type 1 ) header: title 
h# 00be7c ( type 1 ) header: (type 
h# 00be94 ( type 1 ) header: type 
h# 00beac ( type 1 ) header: (emit 
h# 00bec4 ( type 1 ) header: emit 
h# 00bedc ( type 1 ) header: (key 
h# 00bef0 ( type 1 ) header: key 
h# 00bf08 ( type 1 ) header: key? 
h# 00bf1c ( type 1 ) header: bye 
h# 00bf3c ( type 1 ) header: (interactive? 
h# 00bf5c ( type 1 ) header: interactive? 
h# 00bf74 ( type 1 ) header: prompt 
h# 00bf8c ( type 1 ) header: quit 
h# 00bfa4 ( type 1 ) header: accept 
h# 00bfc0 ( type 1 ) header: alloc-mem 
h# 00bfdc ( type 1 ) header: free-mem 
h# 00bff4 ( type 1 ) header: lock[ 
h# 00c00c ( type 1 ) header: ]unlock 
h# 00c028 ( type 1 ) header: sync-cache 
h# 00c040 ( type 1 ) header: #out 
h# 00c058 ( type 1 ) header: #line 
h# 00c06c ( type 1 ) header: cr 
h# 00c084 ( type 1 ) header: key1 
h# 00c0b0 ( type 1 ) header: emit1 
h# 00c0e4 ( type 1 ) header: type1 
h# 00c118 ( type 1 ) header: default-type 
h# 00c164 ( type 1 ) header: (#out 
h# 00c17c ( type 1 ) header: (#line 
h# 00c194 ( type 1 ) header: bell 
h# 00c1ac ( type 1 ) header: bs 
h# 00c1cc ( type 1 ) header: linefeed 
h# 00c1e8 ( type 1 ) header: carret 
h# 00c204 ( type 1 ) header: span 
h# 00c21c ( type 1 ) header: 'word 
h# 00c234 ( type 1 ) header: expect 
h# 00c260 ( type 1 ) header: newline-pstring 
h# 00c280 ( type 1 ) header: newline-string 
h# 00c2a0 ( type 1 ) header: newline 
h# 00c2c8 ( type 1 ) header: space 
h# 00c2e8 ( type 1 ) header: spaces 
h# 00c334 ( type 1 ) header: backspaces 
h# 00c380 ( type 1 ) header: beep 
h# 00c39c ( type 1 ) header: (lf 
h# 00c3cc ( type 1 ) header: (cr 
h# 00c3e8 ( type 1 ) header: lf 
h# 00c40c ( type 1 ) header: crlf 
h# 00c428 ( type 1 ) header: tib 
h# 00c434 ( type 2 ) headerless: #-buf 
h# 00c440 ( type 2 ) headerless: init 
h# 00c48c ( type 1 ) header: base 
h# 00c4a0 ( type 1 ) header: hld 
h# 00c4b8 ( type 1 ) header: hold 
h# 00c4f0 ( type 1 ) header: hold$ 
h# 00c550 ( type 1 ) header: <# 
h# 00c574 ( type 1 ) header: sign 
h# 00c5a8 ( type 1 ) header: >digit 
h# 00c5f8 ( type 1 ) header: u# 
h# 00c624 ( type 1 ) header: u#s 
h# 00c64c ( type 1 ) header: u#> 
h# 00c67c ( type 1 ) header: mu/mod 
h# 00c6bc ( type 1 ) header: # 
h# 00c6e8 ( type 1 ) header: #s 
h# 00c714 ( type 1 ) header: #> 
h# 00c734 ( type 1 ) header: (u.) 
h# 00c754 ( type 1 ) header: u. 
h# 00c774 ( type 1 ) header: u.r 
h# 00c7a4 ( type 1 ) header: (.) 
h# 00c7d8 ( type 1 ) header: (.d) 
h# 00c810 ( type 1 ) header: (.h) 
h# 00c844 ( type 1 ) header: s. 
h# 00c864 ( type 1 ) header: .r 
h# 00c88c ( type 2 ) headerless: (ul.) 
h# 00c8b0 ( type 1 ) header: ul. 
h# 00c8c8 ( type 2 ) headerless: ul.r 
h# 00c8f0 ( type 2 ) headerless: (l.) 
h# 00c928 ( type 1 ) header: l. 
h# 00c96c ( type 2 ) headerless: l.r 
h# 00c99c ( type 1 ) header: n. 
h# 00c9e0 ( type 1 ) header: . 
h# 00ca00 ( type 1 ) header: ? 
h# 00ca1c ( type 1 ) header: (.s 
h# 00ca68 ( type 1 ) header: .s 
h# 00cadc ( type 1 ) header: ". 
h# 00caf0 ( type 2 ) headerless: stringbuf 
h# 00cafc ( type 2 ) headerless: "select 
h# 00cb08 ( type 2 ) headerless: '"temp 
h# 00cb14 ( type 2 ) headerless: /stringbuf 
h# 00cb24 ( type 2 ) headerless: init 
h# 00cb78 ( type 1 ) header: "temp 
h# 00cbec ( type 1 ) header: $save 
h# 00cc0c ( type 1 ) header: $add 
h# 00cc5c ( type 1 ) header: $cat 
h# 00cccc ( type 2 ) headerless: add-char 
h# 00ccfc ( type 2 ) headerless: nextchar 
h# 00cd58 ( type 2 ) headerless: nexthex 
h# 00cdb8 ( type 2 ) headerless: get-hex-bytes 
h# 00ce4c ( type 2 ) headerless: get-char 
h# 00ceb0 ( type 1 ) header: get-string 
h# 00d088 ( type 81 ) header: .( immediate
h# 00d0b0 ( type 1 ) header: ", 
h# 00d0e4 ( type 1 ) header: ," 
h# 00d100 ( type 81 ) header: ." immediate
h# 00d128 ( type 81 ) header: s" immediate
h# 00d178 ( type 81 ) header: " immediate
h# 00d1c0 ( type 81 ) header: [""] immediate
h# 00d1e4 ( type 81 ) header: ["] immediate
h# 00d204 ( type 81 ) header: \ immediate
h# 00d238 ( type 1 ) header: compile-string 
h# 00d278 ( type 81 ) header: "" immediate
h# 00d294 ( type 81 ) header: p" immediate
h# 00d2b0 ( type 81 ) header: c" immediate
h# 00d2e0 ( type 1 ) header: nullstring 
h# 00d2f4 ( type 1 ) header: place 
h# 00d318 ( type 1 ) header: place-cstr 
h# 00d364 ( type 1 ) header: even 
h# 00d394 ( type 1 ) header: +str 
h# 00d3bc ( type 1 ) header: "copy 
h# 00d3e4 ( type 1 ) header: "move 
h# 00d40c ( type 1 ) header: /string 
h# 00d43c ( type 1 ) header: printable? 
h# 00d498 ( type 1 ) header: white-space? 
h# 00d4d0 ( type 1 ) header: -leading 
h# 00d52c ( type 1 ) header: -trailing 
h# 00d584 ( type 1 ) header: upper 
h# 00d5c8 ( type 1 ) header: lower 
h# 00d60c ( type 1 ) header: caps 
h# 00d628 ( type 1 ) header: f83-compare 
h# 00d65c ( type 1 ) header: +-1 
h# 00d680 ( type 1 ) header: compare 
h# 00d6e8 ( type 1 ) header: $= 
h# 00d730 ( type 1 ) header: long-comments 
h# 00d744 ( type 81 ) header: ( immediate
h# 00d7d0 ( type 1 ) header: 0 
h# 00d7e8 ( type 1 ) header: 1 
h# 00d800 ( type 1 ) header: 2 
h# 00d818 ( type 1 ) header: 3 
h# 00d830 ( type 1 ) header: 4 
h# 00d848 ( type 1 ) header: 5 
h# 00d860 ( type 1 ) header: 6 
h# 00d878 ( type 1 ) header: 7 
h# 00d890 ( type 1 ) header: 8 
h# 00d8ac ( type 1 ) header: true 
h# 00d8c8 ( type 1 ) header: false 
h# 00d8e0 ( type 1 ) header: bl 
h# 00d8fc ( type 1 ) header: roll 
h# 00d940 ( type 1 ) header: erase 
h# 00d960 ( type 1 ) header: blank 
h# 00d97c ( type 1 ) header: pad 
h# 00d9a8 ( type 1 ) header: depth 
h# 00d9dc ( type 1 ) header: clear 
h# 00d9fc ( type 1 ) header: hex 
h# 00da28 ( type 1 ) header: decimal 
h# 00da54 ( type 1 ) header: octal 
h# 00da78 ( type 1 ) header: binary 
h# 00da9c ( type 1 ) header: ?enough 
h# 00dadc ( type 1 ) header: ps-size 
h# 00daf8 ( type 1 ) header: rs-size 
h# 00db14 ( type 1 ) header: cdump 
h# 00dc4c ( type 1 ) header: ldump 
h# 00dd50 ( type 2 ) headerless: (compile-time-error) 
h# 00dd78 ( type 2 ) headerless: (compile-time-warning) 
h# 00ddac ( type 1 ) header: abort 
h# 00dddc ( type 1 ) header: abort"-adr 
h# 00ddf8 ( type 1 ) header: abort"-len 
h# 00de1c ( type 1 ) header: set-abort-message 
h# 00de4c ( type 1 ) header: abort-message 
h# 00de74 ( type 1 ) header: (.") 
h# 00de98 ( type 1 ) header: (abort") 
h# 00deec ( type 1 ) header: ?throw 
h# 00df20 ( type 1 ) header: ("s) 
h# 00df48 ( type 1 ) header: 'lastacf 
h# 00df60 ( type 1 ) header: lastacf 
h# 00df80 ( type 1 ) header: state 
h# 00df94 ( type 1 ) header: dp 
h# 00dfac ( type 1 ) header: here 
h# 00dfcc ( type 1 ) header: limit 
h# 00dfe4 ( type 1 ) header: unused 
h# 00e00c ( type 1 ) header: allot-error 
h# 00e024 ( type 1 ) header: allot 
h# 00e0a8 ( type 1 ) header: allot-abort 
h# 00e104 ( type 1 ) header: , 
h# 00e128 ( type 1 ) header: c, 
h# 00e154 ( type 1 ) header: w, 
h# 00e178 ( type 1 ) header: l, 
h# 00e19c ( type 1 ) header: x, 
h# 00e1c0 ( type 1 ) header: d, 
h# 00e1f0 ( type 1 ) header: compile, 
h# 00e20c ( type 1 ) header: compile 
h# 00e23c ( type 1 ) header: ?pairs 
h# 00e278 ( type 1 ) header: ?comp 
h# 00e2b4 ( type 1 ) header: ?exec 
h# 00e2f0 ( type 1 ) header: $defined 
h# 00e314 ( type 1 ) header: $?missing 
h# 00e344 ( type 1 ) header: 'i 
h# 00e364 ( type 81 ) header: literal immediate
h# 00e3d0 ( type 81 ) header: lliteral immediate
h# 00e3f0 ( type 81 ) header: dliteral immediate
h# 00e41c ( type 1 ) header: safe-parse-word 
h# 00e45c ( type 1 ) header: char 
h# 00e480 ( type 81 ) header: [char] immediate
h# 00e4a4 ( type 81 ) header: ascii immediate
h# 00e4c8 ( type 81 ) header: control immediate
h# 00e4f4 ( type 1 ) header: ' 
h# 00e510 ( type 81 ) header: ['] immediate
h# 00e544 ( type 81 ) header: [compile] immediate
h# 00e568 ( type 81 ) header: postpone immediate
h# 00e59c ( type 81 ) header: recurse immediate
h# 00e5bc ( type 81 ) header: abort" immediate
h# 00e5dc ( type 2 ) headerless: saved-dp 
h# 00e5e8 ( type 2 ) headerless: saved-limit 
h# 00e5f4 ( type 2 ) headerless: level 
h# 00e600 ( type 2 ) headerless: /compile-buffer 
h# 00e610 ( type 2 ) headerless: 'compile-buffer 
h# 00e61c ( type 2 ) headerless: compile-buffer 
h# 00e630 ( type 2 ) headerless: init 
h# 00e658 ( type 2 ) headerless: reset-dp 
h# 00e690 ( type 1 ) header: 0level 
h# 00e6c4 ( type 1 ) header: +level 
h# 00e75c ( type 1 ) header: -level 
h# 00e7e4 ( type 2 ) headerless: +>mark 
h# 00e804 ( type 2 ) headerless: +<mark 
h# 00e818 ( type 2 ) headerless: ->resolve 
h# 00e83c ( type 2 ) headerless: -<resolve 
h# 00e864 ( type 1 ) header: but 
h# 00e87c ( type 1 ) header: yet 
h# 00e898 ( type 1 ) header: cs-pick 
h# 00e8b4 ( type 1 ) header: cs-roll 
h# 00e8d0 ( type 81 ) header: begin immediate
h# 00e8ec ( type 81 ) header: until immediate
h# 00e910 ( type 81 ) header: again immediate
h# 00e930 ( type 81 ) header: if immediate
h# 00e954 ( type 81 ) header: ahead immediate
h# 00e978 ( type 81 ) header: then immediate
h# 00e994 ( type 81 ) header: repeat immediate
h# 00e9b4 ( type 81 ) header: else immediate
h# 00e9d8 ( type 81 ) header: while immediate
h# 00e9f4 ( type 81 ) header: do immediate
h# 00ea18 ( type 81 ) header: ?do immediate
h# 00ea40 ( type 81 ) header: loop immediate
h# 00ea68 ( type 81 ) header: +loop immediate
h# 00ea90 ( type 81 ) header: leave immediate
h# 00eab0 ( type 81 ) header: ?leave immediate
h# 00ead0 ( type 1 ) header: user#, 
h# 00eaf8 ( type 1 ) header: .id 
h# 00eb1c ( type 1 ) header: .name 
h# 00eb3c ( type 1 ) header: warning 
h# 00eb54 ( type 81 ) header: case immediate
h# 00eb70 ( type 81 ) header: of immediate
h# 00eb94 ( type 81 ) header: endof immediate
h# 00ebc0 ( type 81 ) header: endcase immediate
h# 00ec00 ( type 1 ) header: mark-error 
h# 00ec1c ( type 1 ) header: show-error 
h# 00ec34 ( type 1 ) header: where 
h# 00ec54 ( type 1 ) header: lose 
h# 00ec94 ( type 1 ) header: >number 
h# 00ed2c ( type 1 ) header: numdelim? 
h# 00ed74 ( type 1 ) header: $dnumber? 
h# 00eec4 ( type 1 ) header: do-defined 
h# 00eee4 ( type 1 ) header: $do-undefined 
h# 00ef00 ( type 1 ) header: do-literal 
h# 00ef20 ( type 1 ) header: (do-literal) 
h# 00ef80 ( type 1 ) header: $handle-literal? 
h# 00efa4 ( type 1 ) header: ($handle-literal?) 
h# 00efd8 ( type 1 ) header: $compile 
h# 00f038 ( type 2 ) headerless: interpret-do-defined 
h# 00f04c ( type 2 ) headerless: compile-do-defined 
h# 00f084 ( type 1 ) header: .not-found 
h# 00f0a8 ( type 2 ) headerless: $interpret-do-undefined 
h# 00f0d0 ( type 2 ) headerless: $compile-do-undefined 
h# 00f0f0 ( type 81 ) header: [ immediate
h# 00f0fc ( type 2 ) headerless: ([) 
h# 00f138 ( type 1 ) header: ] 
h# 00f144 ( type 2 ) headerless: (]) 
h# 00f184 ( type 1 ) header: ?stack 
h# 00f1f8 ( type 1 ) header: ?permitted 
h# 00f214 ( type 1 ) header: interpret 
h# 00f230 ( type 1 ) header: (interpret 
h# 00f26c ( type 1 ) header: ??cr 
h# 00f294 ( type 1 ) header: ok 
h# 00f2ac ( type 1 ) header: status 
h# 00f2c8 ( type 1 ) header: mark-output 
h# 00f2e0 ( type 1 ) header: (ok) 
h# 00f2f8 ( type 1 ) header: "ok" 
h# 00f320 ( type 1 ) header: reset-page 
h# 00f33c ( type 1 ) header: do-prompt 
h# 00f35c ( type 1 ) header: /link 
h# 00f378 ( type 1 ) header: link@ 
h# 00f394 ( type 1 ) header: link! 
h# 00f3b0 ( type 1 ) header: link, 
h# 00f3cc ( type 81 ) header: \itc immediate
h# 00f3e8 ( type 81 ) header: \dtc immediate
h# 00f400 ( type 81 ) header: \ttc immediate
h# 00f418 ( type 81 ) header: \t8 immediate
h# 00f434 ( type 81 ) header: \t16 immediate
h# 00f450 ( type 81 ) header: \t32 immediate
h# 00f464 ( type 81 ) header: 16\ immediate
h# 00f47c ( type 81 ) header: 32\ immediate
h# 00f494 ( type 81 ) header: 64\ immediate
h# 00f4ac ( type 1 ) header: $header 
h# 00f4c4 ( type 1 ) header: header 
h# 00f4e0 ( type 1 ) header: (header) 
h# 00f500 ( type 1 ) header: $create 
h# 00f520 ( type 1 ) header: create 
h# 00f53c ( type 1 ) header: csp 
h# 00f554 ( type 1 ) header: !csp 
h# 00f578 ( type 1 ) header: ?csp 
h# 00f5b4 ( type 1 ) header: (;code) 
h# 00f5dc ( type 1 ) header: (does>) 
h# 00f608 ( type 1 ) header: do-entercode 
h# 00f620 ( type 1 ) header: code 
h# 00f64c ( type 1 ) header: do-exitcode 
h# 00f668 ( type 1 ) header: end-code 
h# 00f684 ( type 1 ) header: c; 
h# 00f6a4 ( type 81 ) header: ;code immediate
h# 00f6e0 ( type 81 ) header: does> immediate
h# 00f73c ( type 1 ) header: : 
h# 00f76c ( type 1 ) header: :noname 
h# 00f794 ( type 81 ) header: ; immediate
h# 00f7c8 ( type 81 ) header: recursive immediate
h# 00f7e8 ( type 1 ) header: constant 
h# 00f80c ( type 1 ) header: user 
h# 00f830 ( type 1 ) header: value 
h# 00f860 ( type 1 ) header: variable 
h# 00f880 ( type 1 ) header: wvariable 
h# 00f8a8 ( type 1 ) header: lvariable 
h# 00f8cc ( type 1 ) header: crash 
h# 00f954 ( type 1 ) header: defer 
h# 00f98c ( type 1 ) header: 2constant 
h# 00f9ac ( type 2 ) headerless: buffer-link 
h# 00f9b8 ( type 2 ) headerless: make-buffer 
h# 00f9f0 ( type 2 ) headerless: /buffer 
h# 00fa08 ( type 2 ) headerless: init-buffer 
h# 00fa38 ( type 2 ) headerless: do-buffer 
h# 00fa74 ( type 2 ) headerless: (buffer:) 
h# 00faa4 ( type 1 ) header: buffer: 
h# 00fab8 ( type 2 ) headerless: >buffer-link 
h# 00fad4 ( type 2 ) headerless: clear-buffer:s 
h# 00fb0c ( type 2 ) headerless: init 
h# 00fb30 ( type 1 ) header: find-name 
h# 00fb50 ( type 1 ) header: >name? 
h# 00fc04 ( type 1 ) header: n>link 
h# 00fc20 ( type 1 ) header: l>name 
h# 00fc3c ( type 1 ) header: n>flags 
h# 00fc54 ( type 1 ) header: name> 
h# 00fc74 ( type 1 ) header: link> 
h# 00fc94 ( type 1 ) header: >link 
h# 00fcb4 ( type 1 ) header: >flags 
h# 00fcd8 ( type 1 ) header: name>string 
h# 00fd18 ( type 1 ) header: l>beginning 
h# 00fd40 ( type 1 ) header: >threads 
h# 00fd60 ( type 1 ) header: last 
h# 00fd6c ( type 2 ) headerless: $make-header 
h# 00fe40 ( type 1 ) header: >first 
h# 00fe60 ( type 1 ) header: $find-word 
h# 00fe78 ( type 2 ) headerless: >ptr 
h# 00fea4 ( type 2 ) headerless: next-word 
h# 00fed4 ( type 2 ) headerless: insert-word 
h# 00ff18 ( type 1 ) header: remove-word 
h# 00ff88 ( type 1 ) header: voc> 
h# 00ffa4 ( type 1 ) header: >voc-link 
h# 00ffcc ( type 1 ) header: (wordlist) 
h# 00fff4 ( type 0 ) header: <vocabulary> 
h# 01001c ( type 1 ) header: wordlist 
h# 010040 ( type 1 ) header: vocabulary 
h# 010064 ( type 1 ) header: $find-next 
h# 010080 ( type 1 ) header: hidden-voc 
h# 01009c ( type 1 ) header: not-hidden 
h# 0100bc ( type 1 ) header: hide 
h# 0100f4 ( type 1 ) header: reveal 
h# 01013c ( type 1 ) header: #threads 
h# 01015c ( type 1 ) header: voc-link 
h# 010168 ( type 2 ) headerless: voc-link, 
h# 01018c ( type 2 ) headerless: fake-name-buf 
h# 0101a8 ( type 1 ) header: fake-name 
h# 010248 ( type 1 ) header: >name 
h# 010288 ( type 1 ) header: immediate 
h# 0102d0 ( type 1 ) header: immediate? 
h# 010308 ( type 1 ) header: flagalias 
h# 01034c ( type 1 ) header: .last 
h# 010374 ( type 1 ) header: current-voc 
h# 010398 ( type 1 ) header: context-voc 
h# 0103c0 ( type 1 ) header: canonical-word 
h# 0103cc ( type 2 ) headerless: duplicate-notification 
h# 010408 ( type 2 ) headerless: init 
h# 010458 ( type 1 ) header: $canonical 
h# 0104a8 ( type 1 ) header: $create-word 
h# 010508 ( type 1 ) header: ($header) 
h# 010534 ( type 1 ) header: (search-wordlist) 
h# 010570 ( type 1 ) header: search-wordlist 
h# 010598 ( type 1 ) header: $vfind 
h# 0105c4 ( type 1 ) header: find-fixup 
h# 010658 ( type 2 ) headerless: tbuf 
h# 010670 ( type 1 ) header: follow 
h# 0106a4 ( type 1 ) header: another? 
h# 010708 ( type 1 ) header: another-word? 
h# 010740 ( type 2 ) headerless: trim 
h# 01079c ( type 1 ) header: fence 
h# 0107b8 ( type 1 ) header: (forget) 
h# 01089c ( type 1 ) header: forget 
h# 0108d0 ( type 1 ) header: marker 
h# 010914 ( type 2 ) headerless: init 
h# 010940 ( type 1 ) header: #vocs 
h# 01095c ( type 1 ) header: context 
h# 010974 ( type 1 ) header: current 
h# 010990 ( type 1 ) header: /context 
h# 0109b4 ( type 1 ) header: context-bounds 
h# 0109cc ( type 2 ) headerless: shuffle-down 
h# 010a3c ( type 1 ) header: clear-context 
h# 010a68 ( type 2 ) headerless: compact-search-order 
h# 010ac0 ( type 1 ) header: (except 
h# 010b18 ( type 1 ) header: prior 
h# 010b30 ( type 1 ) header: $find 
h# 010c00 ( type 1 ) header: find 
h# 010c58 ( type 1 ) header: >voc 
h# 010c80 ( type 1 ) header: root 
h# 010c9c ( type 1 ) header: also 
h# 010cdc ( type 1 ) header: (min-search) 
h# 010d14 ( type 1 ) header: minimum-search-order 
h# 010d34 ( type 1 ) header: forth-wordlist 
h# 010d58 ( type 1 ) header: get-current 
h# 010d7c ( type 1 ) header: set-current 
h# 010da0 ( type 1 ) header: get-order 
h# 010e08 ( type 1 ) header: set-order 
h# 010e88 ( type 1 ) header: only 
h# 010ea8 ( type 1 ) header: except 
h# 010ec8 ( type 1 ) header: seal 
h# 010ef0 ( type 1 ) header: previous 
h# 010f3c ( type 1 ) header: definitions 
h# 010f60 ( type 1 ) header: order 
h# 010fc4 ( type 1 ) header: vocs 
h# 011028 ( type 1 ) header: forth 
h# 011038 ( type 2 ) headerless: init 
h# 011064 ( type 1 ) header: hidden 
h# 011084 ( type 1 ) header: re-heads 
h# 011094 ( type 2 ) headerless: is-error 
h# 0110d0 ( type 1 ) header: to-hook 
h# 0110dc ( type 2 ) headerless: >bu 
h# 0110f0 ( type 2 ) headerless: word-types 
h# 01110c ( type 2 ) headerless: data-locs 
h# 011124 ( type 2 ) headerless: is-user 
h# 011138 ( type 2 ) headerless: is-defer 
h# 01114c ( type 2 ) headerless: is-const 
h# 011160 ( type 2 ) headerless: !data-ops 
h# 011178 ( type 2 ) headerless: (is-const) 
h# 01119c ( type 2 ) headerless: (!data-ops) 
h# 0111b4 ( type 2 ) headerless: associate 
h# 011218 ( type 2 ) headerless: +token@ 
h# 011230 ( type 2 ) headerless: +execute 
h# 011244 ( type 2 ) headerless: kerntype? 
h# 011280 ( type 1 ) header: behavior 
h# 01129c ( type 1 ) header: (is 
h# 0112d0 ( type 1 ) header: >data 
h# 011310 ( type 1 ) header: compile-is 
h# 011344 ( type 1 ) header: do-is 
h# 011394 ( type 81 ) header: is immediate
h# 0113b4 ( type 1 ) header: struct 
h# 0113d0 ( type 1 ) header: field 
h# 01140c ( type 1 ) header: pause 
h# 011424 ( type 1 ) header: init-io 
h# 01143c ( type 1 ) header: do-init 
h# 011458 ( type 1 ) header: cold-hook 
h# 01147c ( type 1 ) header: init-environment 
h# 011498 ( type 1 ) header: (cold-hook 
h# 0114b4 ( type 1 ) header: cold 
h# 0114fc ( type 2 ) headerless: single 
h# 011528 ( type 1 ) header: warm 
h# 011554 ( type 1 ) header: checkpt 
h# 011570 ( type 1 ) header: checkbase 
h# 01158c ( type 1 ) header: checktrack 
h# 0115a8 ( type 1 ) header: checkalloc 
h# 0115c4 ( type 1 ) header: checkmax 
h# 0115e0 ( type 1 ) header: checknested 
h# 0115fc ( type 1 ) header: /check-max 
h# 01161c ( type 1 ) header: /check-crit 
h# 01162c ( type 2 ) headerless: /check-stack 
h# 01163c ( type 2 ) headerless: /check-frame 
h# 01164c ( type 2 ) headerless: >check-prev 
h# 011668 ( type 2 ) headerless: >check-myself 
h# 011684 ( type 2 ) headerless: >check-age 
h# 0116ac ( type 1 ) header: my-self 
h# 0116b8 ( type 2 ) headerless: init-checkpt 
h# 011744 ( type 2 ) headerless: alloc-checkpt 
h# 01192c ( type 2 ) headerless: save-checkpt 
h# 011984 ( type 2 ) headerless: restore-checkpt 
h# 0119dc ( type 2 ) headerless: free-oldest-frames 
h# 011ab8 ( type 2 ) headerless: alloc-frame 
h# 011c24 ( type 2 ) headerless: free-frame 
h# 011c5c ( type 2 ) headerless: (free-checkpt) 
h# 011c94 ( type 1 ) header: reset-checkpts 
h# 011ccc ( type 1 ) header: pop-checkpt 
h# 011cfc ( type 1 ) header: throw 
h# 011d40 ( type 1 ) header: push-checkpt 
h# 011dc8 ( type 1 ) header: catch 
h# 011dfc ( type 2 ) headerless: init 
h# 011e24 ( type 1 ) header: (in-dictionary? 
h# 011e50 ( type 1 ) header: in-dictionary? 
h# 011e68 ( type 1 ) header: .error# 
h# 011e80 ( type 1 ) header: .error 
h# 011f5c ( type 1 ) header: guarded 
h# 011f7c ( type 2 ) headerless: cstrbuf 
h# 011f88 ( type 2 ) headerless: init 
h# 011fbc ( type 1 ) header: $cstr 
h# 01201c ( type 1 ) header: cstr 
h# 01203c ( type 1 ) header: cstrlen 
h# 01207c ( type 1 ) header: cscount 
h# 012090 ( type 2 ) headerless: ln+ 
h# 0120a8 ( type 2 ) headerless: @c@++ 
h# 0120c8 ( type 2 ) headerless: @c!++ 
h# 0120f4 ( type 2 ) headerless: split-string 
h# 01216c ( type 1 ) header: delimiter 
h# 012184 ( type 1 ) header: file 
h# 0121c0 ( type 1 ) header: eof 
h# 0121dc ( type 1 ) header: bfbase 
h# 0121f4 ( type 1 ) header: bflimit 
h# 012200 ( type 2 ) headerless: bftop 
h# 01220c ( type 2 ) headerless: bfend 
h# 012218 ( type 2 ) headerless: bfcurrent 
h# 012224 ( type 2 ) headerless: bfdirty 
h# 012230 ( type 2 ) headerless: fmode 
h# 01223c ( type 2 ) headerless: fstart 
h# 012248 ( type 2 ) headerless: fid 
h# 012254 ( type 2 ) headerless: seekop 
h# 012260 ( type 2 ) headerless: readop 
h# 01226c ( type 2 ) headerless: writeop 
h# 012278 ( type 2 ) headerless: closeop 
h# 012284 ( type 2 ) headerless: alignop 
h# 012290 ( type 2 ) headerless: sizeop 
h# 01229c ( type 2 ) headerless: (file-line) 
h# 0122a8 ( type 2 ) headerless: line-delimiter 
h# 0122b4 ( type 2 ) headerless: pre-delimiter 
h# 0122c0 ( type 2 ) headerless: (file-name) 
h# 0122d4 ( type 1 ) header: /fd 
h# 0122f4 ( type 1 ) header: set-name 
h# 012364 ( type 1 ) header: file-name 
h# 0123a8 ( type 1 ) header: file-line 
h# 0123e8 ( type 1 ) header: setupfd 
h# 01244c ( type 2 ) headerless: not-open 
h# 012468 ( type 1 ) header: read 
h# 012478 ( type 2 ) headerless: write 
h# 012494 ( type 1 ) header: modify 
h# 0124a4 ( type 2 ) headerless: read-write 
h# 0124c4 ( type 1 ) header: nullwrite 
h# 0124ec ( type 1 ) header: fakewrite 
h# 012510 ( type 1 ) header: nullalign 
h# 012530 ( type 1 ) header: nullread 
h# 012558 ( type 1 ) header: nullseek 
h# 01256c ( type 2 ) headerless: fakeread 
h# 01258c ( type 1 ) header: initbuf 
h# 0125fc ( type 1 ) header: release-fd 
h# 012634 ( type 2 ) headerless: fdavail? 
h# 012670 ( type 2 ) headerless: bfsync 
h# 0126a8 ( type 2 ) headerless: ?flushbuf 
h# 012754 ( type 2 ) headerless: fillbuf 
h# 0127e4 ( type 2 ) headerless: >bufaddr 
h# 01280c ( type 2 ) headerless: shortseek 
h# 012868 ( type 1 ) header: input-file 
h# 012874 ( type 2 ) headerless: ?fillbuf 
h# 0128d0 ( type 1 ) header: fclose 
h# 012938 ( type 2 ) headerless: #fds 
h# 012948 ( type 2 ) headerless: /fds 
h# 012958 ( type 2 ) headerless: fds 
h# 012964 ( type 2 ) headerless: init 
h# 0129c0 ( type 2 ) headerless: (get-fd 
h# 012a10 ( type 2 ) headerless: string-sizeop 
h# 012a38 ( type 2 ) headerless: open-buffer 
h# 012b3c ( type 2 ) headerless: (.error#) 
h# 012bb4 ( type 2 ) headerless: /fbuf 
h# 012bc4 ( type 2 ) headerless: get-fd 
h# 012c14 ( type 1 ) header: dftell 
h# 012c70 ( type 1 ) header: ftell 
h# 012c84 ( type 2 ) headerless: fflush 
h# 012cc0 ( type 1 ) header: dfseek 
h# 012d78 ( type 1 ) header: fseek 
h# 012d90 ( type 2 ) headerless: (feof? 
h# 012dbc ( type 1 ) header: fgetc 
h# 012e4c ( type 1 ) header: fputc 
h# 012eb0 ( type 2 ) headerless: copyin 
h# 012f14 ( type 2 ) headerless: copyout 
h# 012f74 ( type 1 ) header: fputs 
h# 012fe8 ( type 1 ) header: fgets 
h# 01308c ( type 1 ) header: dfsize 
h# 013100 ( type 1 ) header: fsize 
h# 013124 ( type 1 ) header: do-fopen 
h# 01313c ( type 1 ) header: fopen 
h# 0131b0 ( type 1 ) header: close-files 
h# 0131f8 ( type 1 ) header: create-file 
h# 01321c ( type 1 ) header: make 
h# 013260 ( type 1 ) header: r/o 
h# 013278 ( type 1 ) header: w/o 
h# 013290 ( type 1 ) header: r/w 
h# 0132a8 ( type 1 ) header: bin 
h# 0132c8 ( type 1 ) header: create-flag 
h# 0132d8 ( type 2 ) headerless: opened-filename 
h# 0132f4 ( type 1 ) header: open-file 
h# 013408 ( type 1 ) header: close-file 
h# 013494 ( type 1 ) header: left-parse-string 
h# 0134cc ( type 1 ) header: remaining$ 
h# 013508 ( type 1 ) header: $set-line-delimiter 
h# 0135c8 ( type 1 ) header: set-line-delimiter 
h# 01361c ( type 1 ) header: -pre-delimiter 
h# 013684 ( type 1 ) header: parse-line-piece 
h# 013768 ( type 1 ) header: read-line 
h# 013868 ( type 1 ) header: reposition-file 
h# 0138a8 ( type 1 ) header: file-size 
h# 0138e8 ( type 1 ) header: read-file 
h# 01392c ( type 1 ) header: write-file 
h# 013990 ( type 1 ) header: flush-file 
h# 0139c8 ( type 1 ) header: write-line 
h# 013a84 ( type 2 ) headerless: _fclose 
h# 013ab8 ( type 2 ) headerless: _fwrite 
h# 013af4 ( type 2 ) headerless: _fread 
h# 013b34 ( type 2 ) headerless: _lseek 
h# 013b64 ( type 2 ) headerless: _fseek 
h# 013b94 ( type 2 ) headerless: _dfseek 
h# 013bc8 ( type 2 ) headerless: _ftell 
h# 013bf8 ( type 2 ) headerless: _dftell 
h# 013c0c ( type 2 ) headerless: _fsize 
h# 013c54 ( type 2 ) headerless: _dfsize 
h# 013c68 ( type 2 ) headerless: file-protection 
h# 013c74 ( type 2 ) headerless: sys_fopen 
h# 013d88 ( type 1 ) header: _delete 
h# 013db0 ( type 2 ) headerless: sys_newline 
h# 013dd0 ( type 2 ) headerless: install-disk-io 
h# 013dfc ( type 2 ) headerless: lf-pstr 
h# 013e08 ( type 2 ) headerless: cr-pstr 
h# 013e14 ( type 2 ) headerless: crlf-pstr 
h# 013e20 ( type 2 ) headerless: _falign 
h# 013e44 ( type 2 ) headerless: _dfalign 
h# 013e70 ( type 2 ) headerless: unix-init-io 
h# 013e80 ( type 2 ) headerless: sys-emit 
h# 013e98 ( type 2 ) headerless: sys-key 
h# 013eb0 ( type 2 ) headerless: sys-(key? 
h# 013ec8 ( type 2 ) headerless: sys-cr 
h# 013ef8 ( type 2 ) headerless: sys-interactive? 
h# 013f2c ( type 1 ) header: sys-accept 
h# 013f64 ( type 2 ) headerless: sys-type 
h# 013f84 ( type 2 ) headerless: sys-bye 
h# 013fa4 ( type 2 ) headerless: sys-alloc-mem 
h# 013fc8 ( type 2 ) headerless: sys-free-mem 
h# 013fe8 ( type 2 ) headerless: sys-sync-cache 
h# 01400c ( type 2 ) headerless: install-wrapper-io 
h# 0140d8 ( type 1 ) header: syscall-vec 
h# 0140e4 ( type 2 ) headerless: sysretval 
h# 0140fc ( type 1 ) header: syscall 
h# 014184 ( type 1 ) header: fsyscall 
h# 0141f4 ( type 1 ) header: retval 
h# 014214 ( type 1 ) header: lretval 
h# 014238 ( type 1 ) header: errno 
h# 014244 ( type 2 ) headerless: error? 
h# 014280 ( type 2 ) headerless: cstr 
h# 014290 ( type 2 ) headerless: unix-init-io 
h# 0142b8 ( type 2 ) headerless: unix-init 
h# 0142d4 ( type 1 ) header: setalias 
h# 014314 ( type 1 ) header: alias 
h# 014340 ( type 1 ) header: >arg 
h# 014394 ( type 1 ) header: arg# 
h# 0143b0 ( type 1 ) header: next-arg 
h# 0143f4 ( type 1 ) header: cmdline-file 
h# 014414 ( type 1 ) header: bootstrap-file 
h# 014480 ( type 1 ) header: process-argument 
h# 0145a0 ( type 1 ) header: process-command-line 
h# 01461c ( type 1 ) header: set-swap-bit 
h# 01463c ( type 1 ) header: note-string 
h# 014658 ( type 1 ) header: allocate 
h# 01467c ( type 1 ) header: free 
h# 0146a0 ( type 1 ) header: insane 
h# 0146c0 ( type 1 ) header: exit-interact? 
h# 0146dc ( type 1 ) header: more-input? 
h# 014700 ( type 1 ) header: /tib 
h# 014718 ( type 1 ) header: blk 
h# 014738 ( type 1 ) header: ?block-valid 
h# 01474c ( type 1 ) header: >in 
h# 014764 ( type 1 ) header: #tib 
h# 014780 ( type 1 ) header: 'source-id 
h# 01479c ( type 1 ) header: source-id 
h# 0147bc ( type 1 ) header: 'source 
h# 0147d4 ( type 1 ) header: #source 
h# 0147f0 ( type 1 ) header: source-adr 
h# 014810 ( type 1 ) header: source 
h# 014838 ( type 1 ) header: set-source 
h# 014864 ( type 1 ) header: save-input 
h# 0148a0 ( type 1 ) header: restore-input 
h# 0148e0 ( type 1 ) header: set-input 
h# 014900 ( type 2 ) headerless: skipwhite 
h# 014948 ( type 2 ) headerless: scantowhite 
h# 0149ac ( type 2 ) headerless: skipchar 
h# 014a08 ( type 2 ) headerless: scantochar 
h# 014a88 ( type 1 ) header: parse-word 
h# 014ad8 ( type 1 ) header: parse 
h# 014b70 ( type 1 ) header: word 
h# 014c0c ( type 1 ) header: refill-line 
h# 014c30 ( type 1 ) header: simple-refill-line 
h# 014c78 ( type 1 ) header: refill 
h# 014d00 ( type 1 ) header: (prompt) 
h# 014d84 ( type 1 ) header: (interact) 
h# 014e6c ( type 1 ) header: interact 
h# 014eac ( type 1 ) header: (quit) 
h# 014ef0 ( type 1 ) header: (evaluate) 
h# 014f20 ( type 1 ) header: evaluate 
h# 014f84 ( type 1 ) header: parse-line 
h# 015024 ( type 2 ) headerless: (file-read-line) 
h# 0150a0 ( type 2 ) headerless: interpret-lines 
h# 0150c4 ( type 2 ) headerless: include-file 
h# 01513c ( type 2 ) headerless: $open-error 
h# 01515c ( type 1 ) header: include-hook 
h# 015180 ( type 1 ) header: include-exit-hook 
h# 01518c ( type 2 ) headerless: include-buffer 
h# 0151c0 ( type 2 ) headerless: $abort-include 
h# 0151e4 ( type 1 ) header: included 
h# 01521c ( type 2 ) headerless: including 
h# 015230 ( type 2 ) headerless: fl 
h# 015240 ( type 2 ) headerless: error-file 
h# 01524c ( type 2 ) headerless: error-line# 
h# 015258 ( type 2 ) headerless: error-source-id 
h# 015264 ( type 2 ) headerless: error-source-adr 
h# 015270 ( type 2 ) headerless: error-#source 
h# 01527c ( type 2 ) headerless: init 
h# 0152c0 ( type 2 ) headerless: (eol-mark?) 
h# 01530c ( type 2 ) headerless: (mark-error) 
h# 015444 ( type 2 ) headerless: (show-error) 
h# 015510 ( type 1 ) header: environment? 
h# 015534 ( type 1 ) header: null-environment? 
h# 015554 ( type 1 ) header: fload 
h# 015578 ( type 1 ) header: $report-name 
h# 0155b0 ( type 1 ) header: fexit 
h# 0155ec ( type 1 ) header: main-task 
h# 0155fc ( type 2 ) headerless: memtop 
h# 015614 ( type 1 ) header: #args 
h# 01562c ( type 1 ) header: args 
h# 015638 ( type 2 ) headerless: cold-code 
